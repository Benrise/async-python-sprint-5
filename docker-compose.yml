services:
  backend:
    container_name: backend
    build: ./services/backend
    volumes:
      - ./services/backend:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
  db:
    container_name: db
    build: ./services/db
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./services/db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME"]
      interval: 10s
      timeout: 5s
      retries: 5

    redis:
      container_name: redis
      build: ./services/redis
      volumes: 
        - ./services/redis/data:/data
      restart: always
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        timeout: 10s
        retries: 5
        start_period: 10s
      ports:
        - ${REDIS_PORTS}

    nginx:
      container_name: nginx
      build: ./services/nginx
      restart: always
      volumes:
        - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./services/nginx/configs:/etc/nginx/conf.d:ro
        - ./services/nginx/logs:/var/log/nginx/
      ports:
        - ${NGINX_PORTS}